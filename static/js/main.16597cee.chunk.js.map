{"version":3,"sources":["assets/imgs/loader.gif","services/storageService.js","services/utilService.js","services/todoListService.js","services/userService.js","actions/userActions.js","pages/Login.jsx","services/cloudinaryService.js","pages/Signup.jsx","cmps/task/TaskDetails.jsx","cmps/task/TaskPreview.jsx","cmps/task/TaskList.jsx","cmps/pickers/Select.jsx","cmps/pickers/TimePicker.jsx","cmps/pickers/UserSelect.jsx","cmps/task/TaskForm.jsx","cmps/todoListActions/Add.jsx","cmps/todoListActions/Edit.jsx","cmps/todoListActions/Filter.jsx","cmps/todoListActions/Sort.jsx","pages/TodoList.jsx","actions/todoListActions.js","App.js","reducers/userReducer.js","reducers/todoListReducer.js","reducers/index.js","store.js","serviceWorker.js","index.js"],"names":["module","exports","storageService","saveToStorage","key","val","str","JSON","stringify","localStorage","setItem","loadFromStorage","getItem","parse","utilService","getFilteredTasks","tasks","filterBy","filter","task","status","timeStamp","mNow","moment","mTimestamp","isoWeek","_checkIfInThisWeek","dueDate","getSortedTasks","sortedBy","isStartToEnd","newTasks","sort","firstTask","secondTask","toLowerCase","inChargeOf","createAt","priority","checkTimeIsValid","split","length","clock","AMorPM","toUpperCase","test","generateId","Math","random","toString","slice","parseDaytime","timeInText","hours","minutes","includes","timestampToStr","date","Date","monthStr","getMonth","dayStr","getDate","yearStr","getFullYear","substring","timestampToTimeInDay","hourStr","getHours","minuteStr","getMinutes","isAm","todoListService","getTodoListById","id","a","async","todoLists","find","todoList","addTask","todoListId","newTodoList","_updateTodolist","deleteTask","taskId","editTask","editedTask","map","addTodoList","newTodoLists","firstTodoLists","title","descripiton","now","userService","getUsers","newUsers","users","user","newUser","password","login","credential","userName","sessionStorage","logout","removeItem","signup","userTodoList","profileUrl","onSetUsers","dispatch","type","mapDispatchToProps","onLogin","Login","connect","state","loggedInUser","props","useState","setUserName","setPassword","wrongMsg","setWrongMsg","useEffect","history","push","className","onSubmit","ev","preventDefault","value","onChange","target","placeholder","onClick","cloudinaryService","uploadImg","UPLOAD_URL","formData","FormData","append","files","fetch","method","body","res","json","data","console","log","onSignup","Signup","confirmPassword","setConfirmPassword","isLoader","setIsLoader","imgUrl","setImgUrl","loader","some","htmlFor","src","alt","hidden","name","newImg","url","TaskDetails","taskInChargeOf","onDeleteTask","toggleIsOpen","setEditTask","isOpen","TaskPreview","TaskList","sortBy","sortedTasks","setSortedTasks","openedTask","setOpenedTask","Select","options","currOption","setOption","isOptionsOpen","setIsOptionsOpen","option","idx","TimePicker","setValue","isTimeInTextValid","setIsTimeInTextValid","textTime","UserSelect","currUser","setCurrUser","TaskForm","formTitle","setTitle","setDescripiton","setPriority","setStatus","calenderDate","setCalenderDate","setTimeInText","stopPropagation","minRows","calendarType","locale","Add","onAddTask","startOf","getTime","newTask","Edit","onEditTask","close","Filter","setFilterBy","Sort","setSortBy","onSetTasks","onLogout","TodoList","filterTasks","setFilterTasks","addTaskOpen","setAddTaskOpen","toggleIsAddTaskOpen","App","path","component","exact","initialState","rootReducer","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.16597cee.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.1c54dd26.gif\";","export const storageService = {\r\n    saveToStorage,\r\n    loadFromStorage\r\n}\r\n\r\n// use to update and take data from local-storage\r\n\r\nfunction saveToStorage(key, val) {\r\n\r\n    var str = JSON.stringify(val);\r\n    localStorage.setItem(key, str)\r\n}\r\n\r\nfunction loadFromStorage(key) {\r\n    var str = localStorage.getItem(key);\r\n    var val = JSON.parse(str)\r\n    return val;\r\n}\r\n\r\n","import moment from \"moment\";\r\n\r\nexport const utilService = {\r\n    getFilteredTasks,\r\n    getSortedTasks,\r\n    checkTimeIsValid,\r\n    generateId,\r\n    parseDaytime,\r\n    timestampToStr,\r\n    timestampToTimeInDay\r\n};\r\n\r\nfunction getFilteredTasks(tasks, filterBy) {\r\n    if (filterBy === 'archives') return tasks.filter(task => task.status === 'done' || task.status === 'canceled');\r\n    if (filterBy === 'open tasks') return tasks.filter(task => task.status === 'pending' || task.status === 'in progress');\r\n    if (filterBy === 'tasks of this week') return tasks.filter(task => _checkIfInThisWeek(task.dueDate));\r\n    return tasks;\r\n}\r\n\r\nfunction getSortedTasks(tasks, sortedBy, isStartToEnd) {\r\n    let newTasks = [...tasks];\r\n    if (sortedBy === 'due date') newTasks = newTasks.sort((firstTask, secondTask) => (firstTask.dueDate - secondTask.dueDate));\r\n    else if (sortedBy === 'status') newTasks = newTasks.sort((firstTask, secondTask) => {\r\n        return (firstTask.status.toLowerCase() >= secondTask.status.toLowerCase()) ? 1 : -1\r\n    })\r\n    else if (sortedBy === 'in charge of') newTasks = newTasks.sort((firstTask, secondTask) => {\r\n        return (firstTask.inChargeOf >= secondTask.inChargeOf) ? 1 : -1\r\n    });\r\n    else if (sortedBy === 'creation date') newTasks = newTasks.sort((firstTask, secondTask) => (firstTask.createAt - secondTask.createAt));\r\n    else if (sortedBy === 'priority') newTasks = newTasks.sort((firstTask, secondTask) => (firstTask.priority - secondTask.priority));\r\n    if (!isStartToEnd) newTasks = newTasks.sort((firstTask, secondTask) => -1);\r\n    return newTasks\r\n}\r\n\r\nfunction checkTimeIsValid(str) {\r\n    const timeMat = /^([0]?[0-9]|1[0-2]):[0-5][0-9]$/i;\r\n    if (str.split(' ').length !== 2) return false;\r\n    const [clock, AMorPM] = str.split(' ');\r\n    if (!(AMorPM.toUpperCase() === 'AM' || AMorPM.toUpperCase() === 'PM')) return false;\r\n    return timeMat.test(clock);\r\n}\r\n\r\nfunction generateId() {\r\n    return \"id\" + Math.random().toString(16).slice(2);\r\n}\r\n\r\nfunction parseDaytime(timeInText) {\r\n    let hours = +timeInText.slice(0, 2)\r\n    const minutes = +timeInText.slice(3, 5)\r\n    if (timeInText.toLowerCase().includes(\"pm\") && hours !== 12) hours += 12;\r\n    return 1000 * 60 * ((hours * 60) + minutes);\r\n}\r\n\r\nfunction timestampToStr(timeStamp) {\r\n    const date = new Date(timeStamp);\r\n    // create DD/MM/YY HH:MM AM/PM format\r\n    const monthStr = date.getMonth() > 8 ? (date.getMonth() + 1) : ('0' + (date.getMonth() + 1));\r\n    const dayStr = date.getDate() > 9 ? date.getDate() : '0' + date.getDate();\r\n    const yearStr = ('' + date.getFullYear()).substring(2);\r\n    return `${dayStr}/${monthStr}/${yearStr} ${timestampToTimeInDay(timeStamp)}`\r\n}\r\n\r\nfunction timestampToTimeInDay(timeStamp) {\r\n    const date = new Date(timeStamp);\r\n    const hourStr = (date.getHours() % 12) > 9 ? (date.getHours() % 12) : '0' + (date.getHours() % 12);\r\n    const minuteStr = date.getMinutes() > 9 ? date.getMinutes() : '0' + date.getMinutes();\r\n    const isAm = date.getHours() <= 12;\r\n    return `${hourStr}:${minuteStr} ${isAm ? 'AM' : 'PM'}`\r\n}\r\n\r\nfunction _checkIfInThisWeek(timeStamp) { // all varibles that statrt with m is used moment library\r\n    const mNow = moment();\r\n    const mTimestamp = moment(timeStamp);\r\n    return mNow.isoWeek() === mTimestamp.isoWeek();\r\n}\r\n","import { storageService } from \"./storageService\";\r\nimport { utilService } from \"./utilService\";\r\n\r\nexport const todoListService = {\r\n    getTodoListById,\r\n    addTask,\r\n    deleteTask,\r\n    editTask,\r\n    addTodoList\r\n};\r\n\r\nlet firstTodoLists = [\r\n    {\r\n        id: 'td101',\r\n        tasks: [\r\n            {\r\n                id: 't101',\r\n                title: 'task number: 1',\r\n                descripiton: 'i am a description of task number: 1',\r\n                priority: 1,\r\n                status: 'done',\r\n                createAt: Date.now(),\r\n                dueDate: Date.now() + (1000 * 60 * 60 * 5),\r\n                inChargeOf: 'u101',\r\n            },\r\n            {\r\n                id: 't102',\r\n                title: 'task number: 2',\r\n                descripiton: 'i am a description of task number: 2',\r\n                priority: 2,\r\n                status: 'in progress',\r\n                createAt: Date.now() - (1000 * 60 * 60 * 5),\r\n                dueDate: Date.now() + (1000 * 60 * 60 * 5),\r\n                inChargeOf: 'u101',\r\n            },\r\n            {\r\n                id: 't109',\r\n                title: 'task number: 9',\r\n                descripiton: 'i am a description of task number: 1',\r\n                priority: 1,\r\n                status: 'done',\r\n                createAt: Date.now(),\r\n                dueDate: Date.now() + (1000 * 60 * 60 * 9),\r\n                inChargeOf: 'u101',\r\n            },\r\n            {\r\n                id: 't103',\r\n                title: 'task number: 3',\r\n                descripiton: 'i am a description of task number: 3',\r\n                priority: 2,\r\n                status: 'pending',\r\n                createAt: Date.now() + (1000 * 60 * 60 * 5),\r\n                dueDate: Date.now() + (1000 * 60 * 60 * 5),\r\n                inChargeOf: 'u101',\r\n            },\r\n            {\r\n                id: 't104',\r\n                title: 'task number: 4',\r\n                descripiton: 'i am a description of task number: 4',\r\n                priority: 3,\r\n                status: 'canceled',\r\n                createAt: Date.now(),\r\n                dueDate: Date.now() + (1000 * 60 * 60 * 5),\r\n                inChargeOf: 'u101',\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        id: 'td102',\r\n        tasks: [\r\n            {\r\n                id: 't105',\r\n                title: 'task number: 5',\r\n                descripiton: 'i am a description of task number: 5',\r\n                priority: 1,\r\n                status: 'done',\r\n                createAt: Date.now(),\r\n                dueDate: Date.now() + (1000 * 60 * 60 * 5),\r\n                inChargeOf: 'u101',\r\n            },\r\n            {\r\n                id: 't106',\r\n                title: 'task number: 6',\r\n                descripiton: 'i am a description of task number: 6',\r\n                priority: 2,\r\n                status: 'in progress',\r\n                createAt: Date.now(),\r\n                dueDate: Date.now() + (1000 * 60 * 60 * 5),\r\n                inChargeOf: 'u101',\r\n            },\r\n            {\r\n                id: 't107',\r\n                title: 'task number: 7',\r\n                descripiton: 'i am a description of task number: 7',\r\n                priority: 2,\r\n                status: 'pending',\r\n                createAt: Date.now(),\r\n                dueDate: Date.now() + (1000 * 60 * 60 * 5),\r\n                inChargeOf: 'u101',\r\n            },\r\n            {\r\n                id: 't108',\r\n                title: 'task number: 8',\r\n                descripiton: 'i am a description of task number: 8',\r\n                priority: 1,\r\n                status: 'canceled',\r\n                createAt: Date.now(),\r\n                dueDate: Date.now() + (1000 * 60 * 60 * 5),\r\n                inChargeOf: 'u101',\r\n            },\r\n        ]\r\n    }\r\n];\r\n\r\nlet todoLists = storageService.loadFromStorage('todolists')? storageService.loadFromStorage('todolists'):firstTodoLists;\r\n\r\n// all the function is async to image server request\r\n\r\nasync function getTodoListById(id) {\r\n    const todoList = await todoLists.find(todoList => todoList.id === id);\r\n    return { ...todoList };\r\n}\r\n\r\nasync function addTodoList() {\r\n    const newTodoList = { id: utilService.generateId(), tasks: [] }\r\n    const newTodoLists = [...todoLists, newTodoList];\r\n    todoLists = newTodoLists;\r\n    storageService.saveToStorage('todolists',todoLists);\r\n    return newTodoList\r\n}\r\n\r\nasync function addTask(todoListId, task) {\r\n    let newTodoList = { ...todoLists.find(todoList => todoList.id === todoListId) };\r\n    newTodoList.tasks = [...newTodoList.tasks, task]\r\n    _updateTodolist(newTodoList);\r\n    return newTodoList;\r\n}\r\n\r\nasync function editTask(todoListId, editedTask) {\r\n    let newTodoList = { ...todoLists.find(todoList => todoList.id === todoListId) };\r\n    newTodoList.tasks = newTodoList.tasks.map(task => task.id === editedTask.id ? editedTask : task);\r\n    _updateTodolist(newTodoList);\r\n    return newTodoList;\r\n}\r\n\r\nasync function deleteTask(todoListId, taskId) {\r\n    let newTodoList = { ...todoLists.find(todoList => todoList.id === todoListId) };\r\n    newTodoList.tasks = [...newTodoList.tasks.filter(task => task.id !== taskId)];\r\n    _updateTodolist(newTodoList);\r\n    return newTodoList\r\n}\r\n\r\nfunction _updateTodolist(newTodoList) {\r\n    todoLists = todoLists.map(todoList => todoList.id === newTodoList.id ? newTodoList : todoList);\r\n    storageService.saveToStorage('todolists',todoLists);\r\n}","import { storageService } from \"./storageService\";\r\nimport { todoListService } from \"./todoListService\";\r\nimport { utilService } from \"./utilService\";\r\n\r\nexport const userService = {\r\n    getUsers,\r\n    login,\r\n    logout,\r\n    signup\r\n};\r\n\r\nlet firstUsers = [\r\n    {\r\n        id: 'u101',\r\n        userName: 'moshe',\r\n        password: '112233',\r\n        todoList: 'td101',\r\n        profileUrl: 'https://randomuser.me/api/portraits/men/72.jpg'\r\n    },\r\n    {\r\n        id: 'u102',\r\n        userName: 'or',\r\n        password: '112233',\r\n        todoList: 'td102',\r\n        profileUrl: 'https://randomuser.me/api/portraits/men/46.jpg'\r\n    },\r\n];\r\n\r\n\r\nvar users = storageService.loadFromStorage('users')? storageService.loadFromStorage('users'):firstUsers;\r\n\r\n// all the function is async to image server request\r\n\r\nasync function getUsers() {\r\n    const newUsers = users.map(user => {\r\n        let newUser = {...user};\r\n        delete newUser.password;\r\n        return newUser\r\n    })\r\n    return newUsers\r\n}\r\n\r\nasync function login(credential) {\r\n    const user = { ...users.find(user => user.userName === credential.userName) };\r\n    if (!user) return false;\r\n    if (user.password !== credential.password) return false;\r\n    const newUser = {...user}\r\n    delete newUser.password\r\n    sessionStorage.setItem('loggedInUser', JSON.stringify(newUser));\r\n    return newUser;\r\n}\r\n\r\nasync function signup(newUser) {\r\n    newUser.id=utilService.generateId();\r\n    const userTodoList = await todoListService.addTodoList();\r\n    newUser.todoList = userTodoList.id;\r\n    const newUsers = [...users, { ...newUser }];\r\n    users = newUsers\r\n    storageService.saveToStorage('users',users);\r\n    delete newUser.password\r\n    return newUser\r\n}\r\n\r\nfunction logout() {\r\n    sessionStorage.removeItem('loggedInUser');\r\n}","import { userService } from '../services/userService'\r\n\r\n\r\nexport function onSetUsers() {\r\n  return async dispatch => {\r\n    const users = await userService.getUsers();\r\n    dispatch({ type: 'SET_USERS', users });\r\n  }\r\n}\r\n\r\nexport function onLogin(credential) {\r\n  return async dispatch => {\r\n    const user = await userService.login(credential);\r\n    if (!user) return false;\r\n    else {\r\n      dispatch({ type: 'SET_LOGIN_USER', user });\r\n      return user\r\n    }\r\n  }\r\n}\r\n\r\nexport function onLogout() {\r\n  return dispatch => {\r\n    userService.logout();\r\n    dispatch({ type: 'SET_LOGIN_USER', user:null});\r\n  }\r\n}\r\n\r\nexport function onSignup(newUser) {\r\n  return async dispatch => {\r\n    const user = await userService.signup(newUser);\r\n    dispatch({ type: 'SET_LOGIN_USER', user });\r\n    return user\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { onLogin } from '../actions/userActions';\r\n\r\nfunction _Login(props) {\r\n\r\n    const [userName, setUserName] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [wrongMsg, setWrongMsg] = useState('Login to your account');\r\n\r\n    useEffect(() => {\r\n        if (props.loggedInUser) props.history.push(`/todoList`)\r\n    }, [])\r\n\r\n    async function onSubmitForm(ev) {\r\n        ev.preventDefault();\r\n        const user = await props.onLogin({ userName, password });\r\n        setUserName('');\r\n        setPassword('');\r\n        if (!user) setWrongMsg('There was a problem with your login')\r\n        else props.history.push(`/todoList`)\r\n    }\r\n\r\n    return (\r\n        <div className='main-container'>\r\n            <div className=\"login-container\">\r\n\r\n                <form\r\n                    className='login-form flex column'\r\n                    onSubmit={onSubmitForm}\r\n                >\r\n                    <p>{wrongMsg}</p>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={userName}\r\n                        onChange={({ target }) => { setUserName(target.value) }}\r\n                        placeholder='user name'\r\n                    />\r\n\r\n                    <input\r\n                        type=\"password\"\r\n                        value={password}\r\n                        onChange={({ target }) => { setPassword(target.value) }}\r\n                        placeholder='password'\r\n                    />\r\n                    <button>login</button>\r\n                </form>\r\n                <div className=\"sign-up-link-container flex justify-space-between\">\r\n                    <p>Don't have an account?</p>\r\n                    <button\r\n                        onClick={() => { props.history.push('/signup') }}\r\n                    >\r\n                        join now\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n//redux\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedInUser: state.user.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    onLogin,\r\n}\r\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(_Login)","export const cloudinaryService = {\r\n    uploadImg\r\n}\r\n\r\n// use cloudinary to upload imgs\r\n\r\nasync function uploadImg(ev) {\r\n    const CLOUD_NAME = \"dif8yy3on\"\r\n    const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', ev.target.files[0])\r\n    formData.append('upload_preset', 'misterToy');\r\n    try {\r\n        const res = await fetch(UPLOAD_URL, {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n        const data = await res.json()\r\n        return data\r\n\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n    \r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { onSignup } from '../actions/userActions';\r\nimport { onSetUsers } from '../actions/userActions';\r\nimport { cloudinaryService } from '../services/cloudinaryService';\r\nimport loader from '../assets/imgs/loader.gif'\r\n\r\nfunction _Signup(props) {\r\n\r\n    const [userName, setUserName] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [isLoader, setIsLoader] = useState(false);\r\n    const [imgUrl, setImgUrl] = useState(\"https://moonvillageassociation.org/wp-content/uploads/2018/06/default-profile-picture1.jpg\");\r\n    const [wrongMsg, setWrongMsg] = useState('Create a new account');\r\n\r\n    useEffect(() => {\r\n        if (isLoader) setImgUrl(loader);\r\n    }, [isLoader])\r\n\r\n    useEffect(() => {\r\n        props.onSetUsers();\r\n        if (props.loggedInUser) props.history.push(`/todoList`)\r\n    }, [])\r\n\r\n    async function uploadImg(ev) {\r\n        setIsLoader(true);\r\n        try {\r\n            const newImg = await cloudinaryService.uploadImg(ev);\r\n            setIsLoader(false)\r\n            setImgUrl(newImg.url)\r\n        } catch (err) {\r\n        }\r\n    }\r\n\r\n    async function onSubmitForm(ev) {\r\n        ev.preventDefault();\r\n        if (password !== confirmPassword) {\r\n            setWrongMsg('Your password and confirmation password do not match')\r\n            setPassword('');\r\n            setConfirmPassword('');\r\n        }\r\n        else if (props.users.some(user => user.userName === userName)) {\r\n            setWrongMsg(`already have account with name ${userName} please try another one`)\r\n        }\r\n        else {\r\n            const user = await props.onSignup({ userName, password, profileUrl: imgUrl });\r\n            props.history.push(`/todoList`)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='main-container'>\r\n            <div className=\"signup-container\">\r\n\r\n                <form\r\n                    className='signup-form flex column'\r\n                    onSubmit={onSubmitForm}\r\n                >\r\n                    <p>{wrongMsg}</p>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={userName}\r\n                        onChange={({ target }) => { setUserName(target.value) }}\r\n                        placeholder='user name'\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        value={password}\r\n                        onChange={({ target }) => { setPassword(target.value) }}\r\n                        placeholder='password'\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        value={confirmPassword}\r\n                        onChange={({ target }) => { setConfirmPassword(target.value) }}\r\n                        placeholder='confirm password'\r\n                    />\r\n                    <label htmlFor=\"img-upload\">\r\n                        <div className='profile-img'>\r\n                            <p>Click to select Profile Image</p>\r\n                            <img src={imgUrl} alt=\"\" />\r\n                        </div>\r\n\r\n                    </label>\r\n                    <input\r\n                        hidden\r\n                        type=\"file\"\r\n                        className=\"file-input\"\r\n                        name=\"img-upload\"\r\n                        id=\"img-upload\"\r\n                        onChange={uploadImg}\r\n                    />\r\n                    <button>signup</button>\r\n                </form>\r\n                <div className=\"login-link-container flex justify-space-between\">\r\n                    <p>Don't have an account?</p>\r\n                    <button\r\n                        onClick={() => { props.history.push('/') }}\r\n                    >\r\n                        login\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n//redux\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedInUser: state.user.loggedInUser,\r\n        users: state.user.users,\r\n\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    onSignup,\r\n    onSetUsers,\r\n}\r\nexport const Signup = connect(mapStateToProps, mapDispatchToProps)(_Signup)","import React from 'react';\r\nimport { utilService } from '../../services/utilService';\r\n\r\nexport default function TaskDetails({\r\n  task,\r\n  taskInChargeOf,\r\n  onDeleteTask,\r\n  toggleIsOpen,\r\n  setEditTask,\r\n  isOpen\r\n}) {\r\n\r\n  function onDeleteThisTask() {\r\n    toggleIsOpen(task.id);\r\n    onDeleteTask(task.id);\r\n  }\r\n\r\n  return (\r\n    <div className={`task-details ${isOpen? 'open':'close'}`}>\r\n      <div className=\"descripiton-container\">\r\n        <p>{task.descripiton}</p>\r\n      </div>\r\n      <div className=\"other-details\">\r\n        <p className=\"status\">Status: {task.status}</p>\r\n        <p className=\"priority\">Priority: {task.priority}</p>\r\n        <p className=\"due-date\">Due Date:{utilService.timestampToStr(task.dueDate)}</p>\r\n        <p className=\"in-charge-of\">In Charge Of: {taskInChargeOf.userName}</p>\r\n        <p className=\"in-charge-of\">Create at: {utilService.timestampToStr(task.createAt)}</p>\r\n      </div>\r\n      <div className=\"btns-container flex justify-space-between\">\r\n        <button onClick={() => { setEditTask(task) }} >edit</button>\r\n        <button onClick={onDeleteThisTask} >delete</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n","import React from 'react';\r\nimport TaskDetails from './TaskDetails';\r\n\r\nexport default function TaskPreview({\r\n  task,\r\n  isOpen,\r\n  toggleIsOpen,\r\n  users,\r\n  onDeleteTask,\r\n  setEditTask\r\n}) {\r\n\r\n  const taskInChargeOf = users.find(user => user.id === task.inChargeOf);\r\n\r\n  return (\r\n    <div className=\"task-container\">\r\n      <div\r\n        className='task-preview'\r\n        onClick={() => toggleIsOpen(task.id)}\r\n      >\r\n        <p>{task.title}</p>\r\n      </div>\r\n        <TaskDetails\r\n          task={task}\r\n          taskInChargeOf={taskInChargeOf}\r\n          onDeleteTask={onDeleteTask}\r\n          toggleIsOpen={toggleIsOpen}\r\n          setEditTask={setEditTask}\r\n          isOpen={isOpen}\r\n        />\r\n    </div>\r\n  )\r\n}\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { utilService } from '../../services/utilService';\r\nimport TaskPreview from './TaskPreview';\r\n\r\nexport default function TaskList({\r\n  tasks,\r\n  sortBy,\r\n  users,\r\n  onDeleteTask,\r\n  setEditTask\r\n}) {\r\n\r\n  const [sortedTasks, setSortedTasks] = useState([]);\r\n  const [isStartToEnd, setIsStartToEnd] = useState(true);\r\n  const [openedTask, setOpenedTask] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (tasks) setSortedTasks(utilService.getSortedTasks(tasks, sortBy, isStartToEnd));\r\n  }, [sortBy, tasks]);\r\n\r\n  function isTaskOpen(taskId) {\r\n    return openedTask === taskId\r\n  }\r\n\r\n  function toggleIsOpen(taskId) {\r\n    setOpenedTask(openedTask === taskId ? '' : taskId)\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"task-list\">\r\n      {!!sortedTasks.length ? (\r\n\r\n        sortedTasks.map(task => (\r\n          <TaskPreview\r\n            key={task.id}\r\n            task={task}\r\n            isOpen={isTaskOpen(task.id)}\r\n            toggleIsOpen={toggleIsOpen}\r\n            users={users}\r\n            onDeleteTask={onDeleteTask}\r\n            setEditTask={setEditTask}\r\n          />\r\n        ))\r\n      ) : (\r\n        <p>Sorry, you do not have any task that follow this filter</p>\r\n      )}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n","import React, { useState } from 'react';\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\r\nimport ArrowDropUpIcon from '@mui/icons-material/ArrowDropUp';\r\n\r\nexport default function Select({\r\n    options,\r\n    currOption,\r\n    setOption\r\n}) {\r\n\r\n    const [isOptionsOpen, setIsOptionsOpen] = useState(false);\r\n\r\n    function toggleIsOpen() {\r\n        setIsOptionsOpen(state => !state)\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className='select-container'\r\n            onClick={toggleIsOpen}\r\n        >\r\n            <div className=\"select flex align-center justify-space-between\">\r\n                <p>{currOption}</p>\r\n                <span\r\n                    className=\"toggle-options-btn\"\r\n                >\r\n                    {isOptionsOpen ? (\r\n                        <ArrowDropUpIcon />\r\n                    ) : (\r\n                        <ArrowDropDownIcon />\r\n                    )}\r\n                </span>\r\n            </div>\r\n            {isOptionsOpen &&\r\n                <div className=\"options\">\r\n                    {options.map((option, idx) =>\r\n                        <div\r\n                            className=\"option\"\r\n                            key={idx}\r\n                            onClick={() => { setOption(option) }}\r\n                        >\r\n                            <p>{option}</p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { utilService } from '../../services/utilService';\r\n\r\nexport default function TimePicker({\r\n    value,\r\n    setValue,\r\n    isTimeInTextValid,\r\n    setIsTimeInTextValid\r\n}) {\r\n\r\n    function updateValue(ev) {\r\n        const textTime = ev.target.value;\r\n        setIsTimeInTextValid(utilService.checkTimeIsValid(textTime))\r\n        setValue(textTime);\r\n    }\r\n\r\n    return (\r\n        <input\r\n            className={`time-picker ${isTimeInTextValid ? 'valid' : 'unvalid'} ${value?'':'empty'}`}\r\n            type=\"text\"\r\n            placeholder='HH:MM AM/PM'\r\n            value={value}\r\n            onChange={updateValue}\r\n        />\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\r\nimport ArrowDropUpIcon from '@mui/icons-material/ArrowDropUp';\r\n\r\nexport default function UserSelect({\r\n    users,\r\n    currUser,\r\n    setCurrUser\r\n}) {\r\n\r\n    const [isOptionsOpen, setIsOptionsOpen] = useState(false);\r\n\r\n    function toggleIsOpen() {\r\n        setIsOptionsOpen(state => !state)\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className='select-user-container'\r\n            onClick={toggleIsOpen}\r\n        >\r\n            <div className=\"select-user flex align-center justify-space-between\">\r\n                <img src={currUser.profileUrl} alt=\"\" />\r\n                <p>{currUser.userName}</p>\r\n                <span className=\"toggle-options-btn\">\r\n                    {isOptionsOpen ? (\r\n                        <ArrowDropUpIcon />\r\n                    ) : (\r\n                        <ArrowDropDownIcon />\r\n                    )}\r\n                </span>\r\n            </div>\r\n            {isOptionsOpen &&\r\n                <div className=\"options\">\r\n                    {users.map((user, idx) =>\r\n                        <div\r\n                            className=\"option flex align-center\"\r\n                            key={idx}\r\n                            onClick={() => { setCurrUser(user) }}\r\n                        >\r\n                            <img src={user.profileUrl} alt=\"\" />\r\n                            <p>{user.userName}</p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport Select from '../pickers/Select';\r\nimport TimePicker from '../pickers/TimePicker';\r\nimport UserSelect from '../pickers/UserSelect';\r\n\r\nexport default function TaskForm({\r\n  formTitle,\r\n  toggleIsOpen,\r\n  onSubmit,\r\n  wrongMsg,\r\n  title,\r\n  setTitle,\r\n  descripiton,\r\n  setDescripiton,\r\n  priority,\r\n  setPriority,\r\n  status,\r\n  setStatus,\r\n  users,\r\n  currUser,\r\n  setCurrUser,\r\n  calenderDate,\r\n  setCalenderDate,\r\n  timeInText,\r\n  setTimeInText,\r\n  isTimeInTextValid,\r\n  setIsTimeInTextValid\r\n}) {\r\n\r\n  const priorityOptions = [1, 2, 3];\r\n  const statusOptions = ['pending', 'in progress', 'done', 'canceled'];\r\n\r\n  function stop(ev) {\r\n    ev.stopPropagation();\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"form-container\"\r\n      onClick={toggleIsOpen}\r\n    >\r\n      <form onSubmit={onSubmit}\r\n        className='flex column'\r\n        onClick={stop}\r\n      >\r\n        <h2>{formTitle}</h2>\r\n        <p>{wrongMsg}</p>\r\n        <input\r\n          type=\"text\"\r\n          placeholder='Title'\r\n          value={title}\r\n          onChange={({ target }) => { setTitle(target.value) }}\r\n        />\r\n        <TextareaAutosize\r\n          type=\"text\"\r\n          placeholder='Descripiton'\r\n          value={descripiton}\r\n          onChange={({ target }) => { setDescripiton(target.value) }}\r\n          minRows={3}\r\n        />\r\n        <div className=\"form-select-container flex align-center\">\r\n          <p>Priority:</p>\r\n          <Select\r\n            options={priorityOptions}\r\n            currOption={priority}\r\n            setOption={setPriority}\r\n          />\r\n        </div>\r\n        <div className=\"form-select-container flex align-center\">\r\n          <p>Stauts:</p>\r\n          <Select\r\n            options={statusOptions}\r\n            currOption={status}\r\n            setOption={setStatus}\r\n          />\r\n        </div>\r\n        <div className=\"form-select-container flex align-center\">\r\n          <p>In Charge Of:</p>\r\n          {currUser &&\r\n            <UserSelect\r\n              users={users}\r\n              currUser={currUser}\r\n              setCurrUser={setCurrUser}\r\n            />\r\n          }\r\n        </div>\r\n        <Calendar\r\n          className='cal'\r\n          onChange={setCalenderDate}\r\n          value={calenderDate}\r\n          calendarType=\"Hebrew\"\r\n          locale=\"ISR\"\r\n        />\r\n        <TimePicker\r\n          value={timeInText}\r\n          setValue={setTimeInText}\r\n          isTimeInTextValid={isTimeInTextValid}\r\n          setIsTimeInTextValid={setIsTimeInTextValid}\r\n        />\r\n        <button>Save</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\n","import moment from 'moment';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { utilService } from '../../services/utilService';\r\nimport TaskForm from '../task/TaskForm';\r\n\r\n\r\n\r\nexport default function Add({\r\n    users,\r\n    onAddTask,\r\n    isOpen,\r\n    toggleIsOpen\r\n}) {\r\n    const [title, setTitle] = useState('');\r\n    const [descripiton, setDescripiton] = useState('');\r\n    const [priority, setPriority] = useState(1);\r\n    const [status, setStatus] = useState('pending');\r\n    const [calenderDate, setCalenderDate] = useState(new Date(moment().startOf('day')));\r\n    const [timeInText, setTimeInText] = useState('');\r\n    const [currUser, setCurrUser] = useState(null);\r\n    const [wrongMsg, setWrongMsg] = useState('Title is requested');\r\n    const [isTimeInTextValid, setIsTimeInTextValid] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (users) setCurrUser(users[0])\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        clearForm()\r\n    }, [isOpen])\r\n\r\n    function clearForm() {\r\n        setTitle('');\r\n        setDescripiton('');\r\n        setPriority(1);\r\n        setStatus('pending')\r\n        setCalenderDate(new Date(moment().startOf('day')));\r\n        setTimeInText('');\r\n        setCurrUser(users[0]);\r\n        setWrongMsg('Title and time of day are requested')\r\n    }\r\n\r\n    function onFormSubmit(ev) {\r\n        ev.preventDefault();\r\n        if (!title) {\r\n            setWrongMsg('Must have a title')\r\n            return;\r\n        }\r\n\r\n        if (timeInText && !isTimeInTextValid) {\r\n            setWrongMsg('Unvalid Time')\r\n            return;\r\n        }\r\n\r\n        let dueDate = calenderDate.getTime();\r\n        if (timeInText) {\r\n            dueDate += utilService.parseDaytime(timeInText);\r\n        }\r\n\r\n        const newTask = {\r\n            title,\r\n            descripiton,\r\n            priority,\r\n            status,\r\n            createAt: Date.now(),\r\n            dueDate,\r\n            inChargeOf: currUser.id,\r\n        }\r\n\r\n        onAddTask(newTask);\r\n        toggleIsOpen();\r\n    }\r\n\r\n    return (\r\n        <div className='add-task' >\r\n            {isOpen &&\r\n                <TaskForm\r\n                    formTitle='Add Task'\r\n                    toggleIsOpen={toggleIsOpen}\r\n                    onSubmit={onFormSubmit}\r\n                    wrongMsg={wrongMsg}\r\n                    title={title}\r\n                    setTitle={setTitle}\r\n                    descripiton={descripiton}\r\n                    setDescripiton={setDescripiton}\r\n                    priority={priority}\r\n                    setPriority={setPriority}\r\n                    status={status}\r\n                    setStatus={setStatus}\r\n                    users={users}\r\n                    currUser={currUser}\r\n                    setCurrUser={setCurrUser}\r\n                    calenderDate={calenderDate}\r\n                    setCalenderDate={setCalenderDate}\r\n                    timeInText={timeInText}\r\n                    setTimeInText={setTimeInText}\r\n                    isTimeInTextValid={isTimeInTextValid}\r\n                    setIsTimeInTextValid={setIsTimeInTextValid}\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n","import moment from 'moment';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { utilService } from '../../services/utilService';\r\nimport TaskForm from '../task/TaskForm';\r\n\r\n\r\n\r\nexport default function Edit({\r\n    users,\r\n    onEditTask,\r\n    task,\r\n    close\r\n}) {\r\n    const [title, setTitle] = useState('');\r\n    const [descripiton, setDescripiton] = useState('');\r\n    const [priority, setPriority] = useState(1);\r\n    const [status, setStatus] = useState('pending');\r\n    const [calenderDate, setCalenderDate] = useState(new Date(moment().startOf('day')));\r\n    const [timeInText, setTimeInText] = useState('');\r\n    const [currUser, setCurrUser] = useState(null);\r\n    const [wrongMsg, setWrongMsg] = useState('Title is requested');\r\n    const [isTimeInTextValid, setIsTimeInTextValid] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (users.length && task) setCurrUser(users.find(user => user.id === task.inChargeOf))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (task) clearForm()\r\n    }, [task])\r\n\r\n    function clearForm() {\r\n        setTitle(task.title);\r\n        setDescripiton(task.descripiton);\r\n        setPriority(task.priority);\r\n        setStatus(task.status)\r\n        setCalenderDate(new Date(moment(task.dueDate).startOf('day')));\r\n        setTimeInText(utilService.timestampToTimeInDay(task.dueDate));\r\n        setCurrUser(users.find(user => user.id === task.inChargeOf));\r\n        setWrongMsg('Title is requested')\r\n        setIsTimeInTextValid(true);\r\n    }\r\n\r\n    function onFormSubmit(ev) {\r\n        ev.preventDefault();\r\n        if (!title) {\r\n            setWrongMsg('Must have a title')\r\n            return;\r\n        }\r\n\r\n        if (timeInText && !isTimeInTextValid) {\r\n            setWrongMsg('Unvalid Time')\r\n            return;\r\n        }\r\n\r\n        let dueDate = calenderDate.getTime();\r\n        if (timeInText) {\r\n            dueDate += utilService.parseDaytime(timeInText);\r\n        }\r\n\r\n        const newTask = {\r\n            id: task.id,\r\n            title,\r\n            descripiton,\r\n            priority,\r\n            status,\r\n            createAt: task.createAt,\r\n            dueDate,\r\n            inChargeOf: currUser.id,\r\n        }\r\n\r\n        onEditTask(newTask);\r\n        close();\r\n    }\r\n\r\n    return (\r\n        <div className='edit-task' >\r\n            {task &&\r\n                <TaskForm\r\n                    formTitle='Edit Task'\r\n                    toggleIsOpen={close}\r\n                    onSubmit={onFormSubmit}\r\n                    wrongMsg={wrongMsg}\r\n                    title={title}\r\n                    setTitle={setTitle}\r\n                    descripiton={descripiton}\r\n                    setDescripiton={setDescripiton}\r\n                    priority={priority}\r\n                    setPriority={setPriority}\r\n                    status={status}\r\n                    setStatus={setStatus}\r\n                    users={users}\r\n                    currUser={currUser}\r\n                    setCurrUser={setCurrUser}\r\n                    calenderDate={calenderDate}\r\n                    setCalenderDate={setCalenderDate}\r\n                    timeInText={timeInText}\r\n                    setTimeInText={setTimeInText}\r\n                    isTimeInTextValid={isTimeInTextValid}\r\n                    setIsTimeInTextValid={setIsTimeInTextValid}\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport Select from '../pickers/Select';\r\n\r\n\r\n\r\nexport default function Filter({\r\n    filterBy,\r\n    setFilterBy\r\n}) {\r\n\r\n    const filterByOptions = ['all tasks','open tasks', 'tasks of this week', 'archives'];\r\n    return (\r\n        <div className='todo-list-filter flex align-center' >\r\n            <p>Filter:</p>\r\n            <Select\r\n                options={filterByOptions}\r\n                currOption={filterBy}\r\n                setOption={setFilterBy}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport Select from '../pickers/Select';\r\n\r\n\r\n\r\nexport default function Sort({\r\n  sortBy,\r\n  setSortBy\r\n}) {\r\n\r\n  const sortOptions = ['creation date', 'due date', 'status', 'in charge of', 'priority'];\r\n\r\n  return (\r\n    <div className='todo-list-sort flex align-center' >\r\n      <p>Sort:</p>\r\n      <Select\r\n        options={sortOptions}\r\n        currOption={sortBy}\r\n        setOption={setSortBy}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { onSetTasks } from \"../actions/todoListActions\";\r\nimport { onAddTask } from \"../actions/todoListActions\";\r\nimport { onEditTask } from \"../actions/todoListActions\";\r\nimport { onDeleteTask } from \"../actions/todoListActions\";\r\nimport { onSetUsers } from '../actions/userActions';\r\nimport { onLogout } from '../actions/userActions';\r\nimport TaskList from '../cmps/task/TaskList';\r\nimport Add from '../cmps/todoListActions/Add';\r\nimport Edit from '../cmps/todoListActions/Edit';\r\nimport Filter from '../cmps/todoListActions/Filter';\r\nimport Sort from '../cmps/todoListActions/Sort';\r\nimport { utilService } from '../services/utilService';\r\n\r\n\r\n\r\nfunction _TodoList(props) {\r\n  const [filterTasks, setFilterTasks] = useState([]);\r\n  const [filterBy, setFilterBy] = useState('all tasks');\r\n  const [sortBy, setSortBy] = useState('creation date');\r\n  const [addTaskOpen, setAddTaskOpen] = useState(false);\r\n  const [editTask, setEditTask] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!props.loggedInUser) props.history.push('/')\r\n    else {\r\n      props.onSetTasks(props.loggedInUser.todoList);\r\n      props.onSetUsers();\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (props.todoList) setFilterTasks(utilService.getFilteredTasks(props.todoList.tasks, filterBy));\r\n  }, [filterBy, props.todoList])\r\n\r\n  function onAddTask(task) {\r\n    props.onAddTask(props.todoList.id, task);\r\n  }\r\n\r\n  function onEditTask(task) {\r\n    props.onEditTask(props.todoList.id, task);\r\n  }\r\n\r\n  function onDeleteTask(taskId) {\r\n    props.onDeleteTask(props.todoList.id, taskId);\r\n  }\r\n\r\n  function toggleIsAddTaskOpen() {\r\n    setAddTaskOpen(state => !state)\r\n  }\r\n\r\n  function onLogout() {\r\n    props.onLogout();\r\n    props.history.push('/');\r\n  }\r\n\r\n  return (\r\n    <div className='main-container todo-list' >\r\n      <h1>TODO List</h1>\r\n      {props.loggedInUser &&\r\n        <p className='welcome' >Welcome {props.loggedInUser.userName}, if you want to connect from another user - <span onClick={onLogout}>logout</span></p>\r\n      }\r\n      <div className=\"action-containers flex align-center\">\r\n        <Filter\r\n          filterBy={filterBy}\r\n          setFilterBy={setFilterBy}\r\n        />\r\n        <Sort\r\n          sortBy={sortBy}\r\n          setSortBy={setSortBy}\r\n        />\r\n        <button\r\n          onClick={toggleIsAddTaskOpen}\r\n        >\r\n          add\r\n        </button>\r\n      </div>\r\n\r\n      <Add\r\n        isOpen={addTaskOpen}\r\n        toggleIsOpen={toggleIsAddTaskOpen}\r\n        users={props.users}\r\n        onAddTask={onAddTask}\r\n      />\r\n      <Edit\r\n        task={editTask}\r\n        close={() => { setEditTask(null) }}\r\n        users={props.users}\r\n        onEditTask={onEditTask}\r\n      />\r\n\r\n      {props.todoList &&\r\n        <TaskList\r\n          tasks={filterTasks}\r\n          sortBy={sortBy}\r\n          users={props.users}\r\n          onDeleteTask={onDeleteTask}\r\n          setEditTask={setEditTask}\r\n        />\r\n      }\r\n    </div>\r\n  )\r\n}\r\n//redux\r\nconst mapStateToProps = state => {\r\n  return {\r\n    todoList: state.todoList.todoList,\r\n    users: state.user.users,\r\n    loggedInUser: state.user.loggedInUser\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n  onSetTasks,\r\n  onAddTask,\r\n  onDeleteTask,\r\n  onEditTask,\r\n  onSetUsers,\r\n  onLogout\r\n}\r\nexport const TodoList = connect(mapStateToProps, mapDispatchToProps)(_TodoList)\r\n\r\n","import { todoListService } from '../services/todoListService'\r\nimport { utilService } from '../services/utilService';\r\n\r\nexport function onSetTasks(taskId) {\r\n  return async dispatch => {\r\n    const todoList = await todoListService.getTodoListById(taskId);\r\n    dispatch({ type: 'SET_TODOLIST', todoList });\r\n  }\r\n}\r\n\r\nexport function onAddTask(todoListId, task) {\r\n  task.id = utilService.generateId();\r\n  return async dispatch => {\r\n    const todoList = await todoListService.addTask(todoListId, task);\r\n    dispatch({ type: 'SET_TODOLIST', todoList });\r\n  }\r\n}\r\n\r\nexport function onEditTask(todoListId, task) {\r\n  return async dispatch => {\r\n    const todoList = await todoListService.editTask(todoListId, task);\r\n    dispatch({ type: 'SET_TODOLIST', todoList });\r\n  }\r\n}\r\n\r\nexport function onDeleteTask(todoListId, taskId) {\r\n  return async dispatch => {\r\n    const todoList = await todoListService.deleteTask(todoListId, taskId);\r\n    dispatch({ type: 'SET_TODOLIST', todoList });\r\n  }\r\n}\r\n","import React from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Login } from './pages/Login';\nimport { Signup } from './pages/Signup';\nimport { TodoList } from './pages/TodoList';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/todolist\" component={TodoList} exact />\n          <Route path=\"/signup\" component={Signup} exact />\n          <Route path=\"/\" component={Login} exact />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const initialState = {\r\n    users: [],\r\n    loggedInUser: JSON.parse(sessionStorage.getItem('loggedInUser'))?JSON.parse(sessionStorage.getItem('loggedInUser')):null\r\n}\r\n\r\nexport function userReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_LOGIN_USER':\r\n            return {\r\n                ...state,\r\n                loggedInUser: action.user\r\n            }\r\n        case 'SET_USERS':\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","\r\nconst initialState = {\r\n    todoList: null,\r\n}\r\n\r\nexport function todoListReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_TODOLIST':\r\n            return {\r\n                ...state,\r\n                todoList: action.todoList\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport { userReducer } from './userReducer';\r\nimport { todoListReducer } from './todoListReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  user: userReducer,\r\n  todoList:todoListReducer\r\n  \r\n})\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from 'redux';\r\n\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/index.js';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport App from './App';\nimport {store} from './store';\nimport * as serviceWorker from './serviceWorker';\nimport './assets/styles/global.scss'\n\nReactDOM.render(\n  <Provider store={store} >\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\nserviceWorker.unregister();\n"],"sourceRoot":""}